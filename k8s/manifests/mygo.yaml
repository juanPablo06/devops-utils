apiVersion: apps/v1
kind: Deployment
metadata:
  name: mygo
  labels:
    app: mygo
  annotations:
    mygo/owner: "juanPablo06"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mygo
  template:
    metadata:
      labels:
        app: mygo
    spec:
      volumes:
      - name: mygo-vol
        emptyDir: {}
      containers:
      - name: mygo
        image: whone01/mygo:cfgmap
        envFrom:
        - configMapRef:
            name: mygo-cm
        volumeMounts:
        - name: mygo-vol
          mountPath: /tmp
        ports: 
        - containerPort: 8888
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 20Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 10 
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mygo-hpa
  namespace: mygo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mygo
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mygo
  labels:
    app: mygo
spec:
  ports:
  - port: 9999
    targetPort: 8888
  selector:
    app: mygo
  type: ClusterIP
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mygo-pdb
spec:
  selector:
    matchLabels:
      app: mygo
  minAvailable: 1
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: mygo-rq
spec:
  hard:
    pods: "10"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: mygo-lr
spec:
  limits:
  - default:
      cpu: 200m
      memory: 20Mi
    defaultRequest:
      cpu: 100m
      memory: 10Mi
    type: Container
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mygo-cm
  namespace: mygo 
data:
  GREETING: "Hello from mygo"
---
apiVersion: v1
kind: Secret
metadata:
  name: mygo-secret
  namespace: mygo
stringData:
  magicWord: xyzzy